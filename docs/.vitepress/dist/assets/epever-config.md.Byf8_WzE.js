import{_ as e,c as t,o,a3 as i,ai as a}from"./chunks/framework.CGymu1Q6.js";const g=JSON.parse('{"title":"Configuration","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"epever-config.md","filePath":"epever-config.md"}'),l={name:"epever-config.md"},n=i('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">â€‹</a></h1><p>Using the default software there are many options in the configuration page. In reality however these come down to a just a few items which can be groupe together.</p><p align="center" width="100%"><img src="'+a+'" alt="I sell on Tindie"></p><p>If you wish to push the solar stats to an InfluxDB the following details below must be populated.</p><ul><li>InfluxDB IP:</li><li>InfluxDB Port:</li><li>InfluxDB Database:</li><li>InfluxDB Username:</li><li>InfluxDB Password:</li><li>InfluxDB Toggle Swtich</li></ul><p>If you wish to push the solar stats to a MQTT server the following details below must be populated.</p><ul><li>MQTT IP:</li><li>MQTT Port:</li><li>MQTT Database:</li><li>MQTT Username:</li><li>MQTT Password:</li><li>MQTT Toggle Swtich</li></ul><p>The final option is to toggle the load which controls the output on the Solar Charge Controller.</p>',8),r=[n];function s(p,u,h,c,f,_){return o(),t("div",null,r)}const T=e(l,[["render",s]]);export{g as __pageData,T as default};
